<!DOCTYPE html>
<html lang="id">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>ASTRA</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&family=Merriweather:wght@700&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/css/project-pkl.css" />
  </head>
  <body>
    <!-- PARALLAX LAYERS -->
    <div class="parallax-layer layer-0" aria-hidden="true"></div>
    <div class="parallax-layer layer-1" aria-hidden="true"></div>
    <canvas id="particle-canvas" aria-hidden="true"></canvas>

    <!-- NAVBAR -->
    <nav class="navbar">
      <div class="nav-container">
        <div class="nav-logo">ASTRA</div>
        <div class="nav-toggle" id="nav-toggle">
          <span></span>
          <span></span>
          <span></span>
        </div>
        <ul class="nav-menu" id="nav-menu">
          <li><a href="#Beranda">Beranda</a></li>
          <li><a href="#Rancangan">Rancangan</a></li>
          <li><a href="#Dashboard">Dashboard</a></li>
          <li><a href="#Data">Data</a></li>
          <li><a href="#Pelanggaran">Pelanggaran</a></li>
          <li><a href="#Kehadiran">Kehadiran</a></li>
          <li><a href="#Validasi">Validasi</a></li>
        </ul>
      </div>
    </nav>

    <!-- HERO (tetap persis) -->
    <header class="hero" role="banner">
      <div class="hero-content">
        <h1>ASTRA</h1>
        <p>
          Dokumentasi & Penjelasan mengenai projek aplikasi web
          <span>ASTRA Selapan</span>.
        </p>
      </div>
    </header>

    <!-- MAIN -->
    <main>
      <!-- STAGE INTRO BOX -->
      <section id="Beranda" class="stage stage-intro reveal">
        <div class="story-left" style="grid-column: 1 / -1">
          <span id="overview" class="kicker">Awal</span>
          <h2 class="proj-title">apa itu ASTRA?</h2>
          <p class="lead">
            <strong>ASTRA</strong> Astra adalah sebuah aplikasi sistem tata
            tertib yang dikembangkan untuk Asta Arkananta. Aplikasi ini
            berfungsi sebagai alat pengelolaan poin pelanggaran dan
            ketidakhadiran siswa agar proses administrasi kedisiplinan menjadi
            lebih efisien dan terstruktur. Dengan menggunakan teknologi berbasis
            PHP dan framework CodeIgniter, Astra dirancang agar mudah digunakan
            serta memiliki performa yang optimal dalam pengolahan data siswa.
          </p>

          <p class="lead">
            Selama masa Praktik Kerja Lapangan (PKL) di
            <strong>PT Datasoft Solusi Indonesia</strong>, saya berfokus
            sepenuhnya pada pengembangan proyek Astra ini sebagai satu-satunya
            proyek utama yang saya kerjakan. Melalui proyek ini, saya tidak
            hanya berkontribusi dalam pengembangan sistem, tetapi juga
            memperoleh pengalaman langsung dalam penerapan teknologi web dan
            manajemen proyek berbasis industri.
          </p>
        </div>
      </section>

      <!-- ---------- STAGE 1 ---------- -->
      <div id="Rancangan" class="stage-wrapper reveal">
        <!-- Kolom kiri -->
        <section class="stage">
          <div class="story-left">
            <span class="kicker">Rancang</span>
            <h2 class="proj-title">Tahap Perancangan Konsep Aplikasi</h2>
            <div
              class="text-collapse"
              style="max-height: 150px; overflow: hidden; transition: 0.5s"
            >
              <p class="lead">
                Langkah pertama dalam pengembangan aplikasi Astra adalah
                menentukan konsep dasar sistem. Proses ini dimulai dengan
                pembuatan flowchart menggunakan Draw.io untuk menggambarkan alur
                kerja aplikasi secara visual. Selain itu, alur sistem juga
                dijelaskan secara tertulis melalui dokumen di Google Docs agar
                mudah dipahami oleh seluruh tim. Setelah konsep dan alur sistem
                selesai disusun, tahap berikutnya adalah menentukan tampilan
                antarmuka aplikasi. Pada tahap awal, kami menggunakan template
                yang sudah tersedia sebagai dasar desain, kemudian melakukan
                beberapa penyesuaian dan modifikasi dengan mengambil inspirasi
                dari berbagai referensi desain di Pinterest, sehingga tampilan
                aplikasi menjadi lebih menarik dan sesuai dengan kebutuhan
                pengguna.
              </p>
            </div>
            <button
              class="read-more-btn"
              style="
                background: none;
                border: none;
                color: var(--accent);
                cursor: pointer;
                font-weight: 600;
              "
            >
              Baca Selengkapnya..
            </button>
            <ul class="features">
              <li>
                Dokumentasi: perencanaan di Google Docs & flowchart di Draw.io
              </li>
            </ul>
          </div>
        </section>
        <!-- Kolom kanan = carousel -->
        <aside class="visual-right">
          <div class="carousel" id="carousel-1">
            <div
              class="slide show"
              style="background-image: url('/img/pkl/gdrive-materi.png')"
            ></div>
            <div
              class="slide"
              style="background-image: url('/img/pkl/materiphp-materi.png')"
            ></div>
            <div
              class="slide"
              style="background-image: url('/img/pkl/gdocs-astra.png')"
            ></div>
            <div
              class="slide"
              style="background-image: url('/img/pkl/drawio-astra.png')"
            ></div>
          </div>
          <div class="dots" data-carousel="carousel-1"></div>
        </aside>
      </div>

      <!-- ---------- STAGE 2 ---------- -->
      <div id="Dashboard" class="stage-wrapper reveal">
        <section class="stage">
          <div class="story-left">
            <span class="kicker">Pantau</span>
            <h2 class="proj-title">Dashboard</h2>
            <div
              class="text-collapse"
              style="max-height: 150px; overflow: hidden; transition: 0.5s"
            >
              <p class="lead">
                Page Dashboard berfungsi sebagai halaman utama yang menampilkan
                rangkuman informasi penting dalam sistem tata tertib sekolah.
                Halaman ini digunakan oleh guru atau admin untuk memantau data
                statistik seperti jumlah pelanggaran, absensi siswa, hingga
                laporan kegiatan dengan tampilan interaktif berbasis Bootstrap.
                Dari sisi teknis, controller Dashboard pada framework
                CodeIgniter berperan sebagai penghubung antara view dan model,
                di mana model seperti M_revisi, M_pelanggaran, dan M_kehadiran
                digunakan untuk mengambil data dari database, seperti jumlah
                pelanggaran bulan lalu, total siswa yang menjalani treatment,
                serta daftar ranking siswa dengan poin tertinggi. Seluruh data
                tersebut kemudian dikirim ke view dashboard.php untuk
                ditampilkan dalam bentuk card statistik dan tabel dinamis yang
                responsif. Selain itu, fungsi tambahan upload_bukti() juga
                diterapkan menggunakan library upload bawaan CodeIgniter untuk
                mengelola file bukti pelanggaran siswa dalam format PDF, JPG,
                atau PNG secara otomatis.
              </p>
            </div>
            <button
              class="read-more-btn"
              style="
                background: none;
                border: none;
                color: var(--accent);
                cursor: pointer;
                font-weight: 600;
              "
            >
              Baca Selengkapnya..
            </button>
            <ul class="features">
              <li>Dokumentasi: Tampilan page Dashboard</li>
            </ul>
          </div>
        </section>
        <aside class="visual-right">
          <div class="carousel" id="carousel-2">
            <div
              class="slide show"
              style="background-image: url('/img/pkl/dashboard1-astra.png')"
            ></div>
            <div
              class="slide"
              style="background-image: url('/img/pkl/dashboard2-astra.png')"
            ></div>
          </div>
          <div class="dots" data-carousel="carousel-2"></div>
        </aside>
      </div>

      <!-- ---------- STAGE 3 ---------- -->
      <div id="Data" class="stage-wrapper reveal">
        <section class="stage">
          <div class="story-left">
            <span class="kicker">Bangun</span>
            <h2 class="proj-title">Pasal-pasal & Inputan Data Siswa</h2>
            <div
              class="text-collapse"
              style="max-height: 150px; overflow: hidden; transition: 0.5s"
            >
              <p>
                Page Pasal-Pasal berisi kumpulan peraturan sekolah yang
                dituangkan dalam bentuk pasal mulai dari Pasal 16 hingga Pasal
                23, yang menjadi dasar tata tertib dan pedoman perilaku siswa di
                lingkungan sekolah. Setiap pasal berisi ketentuan yang mengatur
                sikap, kewajiban, serta larangan bagi siswa agar tercipta
                suasana belajar yang tertib dan disiplin. Salah satu bagian yang
                paling penting terdapat pada Pasal 20, yang secara khusus
                menjelaskan tentang pemberian poin pelanggaran berdasarkan
                kategori ringan, sedang, hingga berat — poin ini nantinya akan
                digunakan dalam sistem untuk menentukan tindak lanjut terhadap
                siswa, seperti peringatan, pembinaan, atau tindakan disiplin
                lainnya.
              </p>
              <p>
                Page Data Siswa adalah halaman untuk mengelola seluruh informasi
                terkait siswa, seperti NISN, NIPD, nama, kelas, jenis kelamin,
                wali kelas, dan status. Pada sisi kode, page ini menggunakan
                kombinasi controller Data_siswa dan model m_siswa untuk
                menangani proses CRUD (Create, Read, Update, Delete) serta fitur
                tambahan seperti upload foto dan import data dari file Excel
                menggunakan PhpSpreadsheet. AJAX digunakan agar interaksi
                seperti penambahan atau pencarian data dapat dilakukan tanpa
                perlu reload halaman. Dengan desain Bootstrap dan struktur tabel
                responsif, page ini memudahkan admin dalam memantau dan
                mengelola data siswa secara real time, sekaligus menjaga
                pengalaman pengguna agar tetap cepat dan efisien.
              </p>
            </div>
            <button
              class="read-more-btn"
              style="
                background: none;
                border: none;
                color: var(--accent);
                cursor: pointer;
                font-weight: 600;
              "
            >
              Baca Selengkapnya..
            </button>
            <ul class="features">
              <li>
                Dokumentasi: Tampilan pasal-pasal dan form input data siswa.
              </li>
            </ul>
          </div>
        </section>
        <aside class="visual-right">
          <div class="carousel" id="carousel-3">
            <div
              class="slide show"
              style="background-image: url('/img/pkl/pasal1-astra.png')"
            ></div>
            <div
              class="slide"
              style="background-image: url('/img/pkl/pasal2-astra.png')"
            ></div>
            <div
              class="slide"
              style="background-image: url('/img/pkl/datasiswa1-astra.png')"
            ></div>
            <div
              class="slide"
              style="background-image: url('/img/pkl/datasiswa2-astra.png')"
            ></div>
          </div>
          <div class="dots" data-carousel="carousel-3"></div>
        </aside>
      </div>

      <!-- ---------- STAGE 4 ---------- -->
      <div id="Pelanggaran" class="stage-wrapper reveal">
        <section class="stage">
          <div class="story-left">
            <span class="kicker">Catat</span>
            <h2 class="proj-title">Input Pelanggaran</h2>
            <div
              class="text-collapse"
              style="max-height: 150px; overflow: hidden; transition: 0.5s"
            >
              <p class="lead">
                Page Pelanggaran berfungsi sebagai halaman pengelolaan data
                pelanggaran siswa yang mencakup pencatatan, pengeditan,
                pencarian, serta pembuatan laporan pelanggaran secara otomatis.
                Halaman ini menampilkan daftar pelanggaran dalam bentuk tabel
                interaktif yang diambil dari database melalui fungsi ambilData()
                dengan teknologi AJAX, sehingga data dapat diperbarui secara
                dinamis tanpa perlu memuat ulang halaman. Pengguna dapat
                menambahkan data baru lewat form input yang muncul secara
                pop-up, di mana field seperti nama siswa, NISN, dan kelas terisi
                otomatis menggunakan data dari tabel siswa melalui JavaScript
                dan datalist. Kode pada bagian controller Pelanggaran di
                framework CodeIgniter menangani proses CRUD — seperti fungsi
                tambahdata(), ubahdata(), dan ambilId() — yang berkomunikasi
                langsung dengan model M_pelanggaran untuk menyimpan,
                memperbarui, dan mengambil data dari tabel pelanggaran. Selain
                itu, fitur autocomplete memudahkan pencarian jenis pelanggaran
                dari tabel jenis_pelanggaran, dan pengguna juga bisa mengekspor
                data menjadi PDF atau Excel menggunakan Dompdf dan
                PhpSpreadsheet. Secara keseluruhan, page ini dirancang agar guru
                atau admin dapat dengan mudah memantau dan memvalidasi poin
                pelanggaran siswa, termasuk melakukan pengurangan poin
                berdasarkan persetujuan guru BK.
              </p>
            </div>
            <button
              class="read-more-btn"
              style="
                background: none;
                border: none;
                color: var(--accent);
                cursor: pointer;
                font-weight: 600;
              "
            >
              Baca Selengkapnya..
            </button>

            <ul class="features">
              <li>Dokumentasi: Tampilan page Pelanggaran siswa.</li>
            </ul>
          </div>
        </section>
        <aside class="visual-right">
          <div class="carousel" id="carousel-4">
            <div
              class="slide show"
              style="background-image: url('/img/pkl/pelanggaran-astra.png')"
            ></div>
            <div
              class="slide"
              style="
                background-image: url('/img/pkl/inputpelanggaran-astra.png');
              "
            ></div>
            <div
              class="slide"
              style="background-image: url('/img/pkl/pdfpelanggaran-astra.png')"
            ></div>
            <div
              class="slide"
              style="
                background-image: url('/img/pkl/excelpelanggaran-astra.png');
              "
            ></div>
            <div
              class="slide"
              style="
                background-image: url('/img/pkl/siswapdfpelanggaran-astra.png');
              "
            ></div>
          </div>
          <div class="dots" data-carousel="carousel-4"></div>
        </aside>
      </div>

      <!-- ---------- STAGE 5 ---------- -->
      <div id="Kehadiran" class="stage-wrapper reveal">
        <section class="stage">
          <div class="story-left">
            <span class="kicker">Rekap</span>
            <h2 class="proj-title">Input Kehadiran</h2>
            <div
              class="text-collapse"
              style="max-height: 150px; overflow: hidden; transition: 0.5s"
            >
              <p class="lead">
                Halaman Pelanggaran/Kehadiran ini berfungsi sebagai pusat
                pengelolaan data absensi siswa yang juga terintegrasi dengan
                sistem poin pelanggaran sekolah. Melalui halaman ini, guru atau
                petugas tata tertib dapat menambahkan, meninjau, serta menghapus
                data kehadiran siswa berdasarkan tanggal dan keterangan seperti
                alpa (A), izin, atau sakit, di mana setiap jenis keterangan
                memiliki bobot poin tertentu yang memengaruhi total poin
                pelanggaran siswa. Secara teknis, kode pada halaman ini
                menggunakan arsitektur MVC (Model-View-Controller) pada
                framework CodeIgniter. Controller Kehadiran berperan sebagai
                pengatur logika utama — mulai dari memanggil data siswa dari
                model M_kehadiran, menambahkan data baru ke tabel kehadiran,
                menampilkan detail, hingga melakukan ekspor laporan dalam format
                PDF (menggunakan library Dompdf) dan Excel (dengan
                PhpSpreadsheet). Di sisi view, file HTML menggunakan Bootstrap
                dan jQuery untuk membuat tampilan interaktif seperti tabel
                dinamis, pencarian data real-time, dan form input otomatis yang
                mengisi NISN, kelas, serta wali kelas berdasarkan nama siswa.
                Terdapat juga fitur autocomplete dan laporan per siswa, yang
                memudahkan guru BK memantau akumulasi pelanggaran serta
                melakukan validasi pengurangan poin sesuai kesepakatan. Dengan
                demikian, halaman ini tidak hanya mencatat kehadiran, tetapi
                juga menjadi alat pengawasan disiplin siswa secara digital dan
                terstruktur.
              </p>
            </div>
            <button
              class="read-more-btn"
              style="
                background: none;
                border: none;
                color: var(--accent);
                cursor: pointer;
                font-weight: 600;
              "
            >
              Baca Selengkapnya..
            </button>

            <ul class="features">
              <li>Dokumentasi: Tampilan page Kehadiran.</li>
            </ul>
          </div>
        </section>
        <aside class="visual-right">
          <div class="carousel" id="carousel-5">
            <div
              class="slide show"
              style="background-image: url('/img/pkl/kehadiran-astra.png')"
            ></div>
            <div
              class="slide"
              style="background-image: url('/img/pkl/inputkehadiran-astra.png')"
            ></div>
            <div
              class="slide"
              style="background-image: url('/img/pkl/pdfkehadiran-astra.png')"
            ></div>
            <div
              class="slide"
              style="background-image: url('/img/pkl/excelkehadiran-astra.png')"
            ></div>
            <div
              class="slide"
              style="
                background-image: url('/img/pkl/siswapdfkehadiran-astra.png');
              "
            ></div>
          </div>
          <div class="dots" data-carousel="carousel-5"></div>
        </aside>
      </div>

      <!-- ---------- STAGE 6 ---------- -->
      <div id="Validasi" class="stage-wrapper reveal">
        <section class="stage">
          <div class="story-left">
            <span class="kicker">Validasi</span>
            <h2 class="proj-title">Perancangan Validasi poin</h2>
            <div
              class="text-collapse"
              style="max-height: 150px; overflow: hidden; transition: 0.5s"
            >
              <p class="lead">
                Halaman Revisi Poin Siswa berfungsi sebagai tempat untuk
                melihat, meninjau, dan memperbarui total poin pelanggaran siswa
                berdasarkan data yang diperoleh dari catatan pelanggaran dan
                kehadiran. Melalui halaman ini, guru atau tim tata tertib dapat
                memantau siswa yang sudah atau belum menjalani tindak lanjut
                seperti pengarahan, skorsing, hingga pengembalian ke orang tua.
                Alur pengambilan data pada halaman Revisi Poin Siswa dimulai
                dari controller Revisi, yang memanggil berbagai fungsi dalam
                model M_revisi seperti get_pelanggaran(), get_kehadiran(),
                get_treatment(), dan get_revisi() untuk mengambil data dari
                tabel-tabel terkait di database. Data tersebut kemudian digabung
                berdasarkan NISN dan dijumlahkan untuk menghitung total poin
                pelanggaran setiap siswa. Setelah total poin diperoleh,
                controller menjalankan logika kondisional untuk menentukan
                kategori tindak lanjut secara otomatis sesuai rentang poin, lalu
                mengirimkan hasil perhitungan ke view revisi.php agar
                ditampilkan dalam bentuk kartu dinamis berisi informasi siswa,
                poin, dan status tindak lanjut. Saat pengguna menandai checkbox
                “Telah menyelesaikan treatment” atau menekan tombol Simpan
                Revisi, data dikirim kembali ke controller melalui method
                simpan_revisi(), yang akan memeriksa apakah data revisi sudah
                ada menggunakan fungsi cek_revisi($nisn) di model, lalu
                menyimpannya dengan insert_revisi() atau memperbaruinya lewat
                update_revisi(). Setiap kali revisi disimpan, sistem otomatis
                mengurangi poin sebesar 30 dan memperbarui kategori tindak
                lanjut. Selain itu, controller juga dapat mengekspor data hasil
                revisi ke dalam format PDF menggunakan library Dompdf. Dengan
                demikian, seluruh proses data berjalan secara terpadu melalui
                alur MVC (Model–View–Controller) yang menghubungkan database,
                logika bisnis, dan tampilan pengguna secara dinamis dan efisien.
              </p>
            </div>
            <button
              class="read-more-btn"
              style="
                background: none;
                border: none;
                color: var(--accent);
                cursor: pointer;
                font-weight: 600;
              "
            >
              Baca Selengkapnya..
            </button>
            <ul class="features">
              <li>Dokumentasi: Tampilan page Validasi poin.</li>
            </ul>
          </div>
        </section>
        <aside class="visual-right">
          <div class="carousel" id="carousel-6">
            <div
              class="slide"
              style="background-image: url('/img/pkl/validasipoin-astra.png')"
            ></div>
            <div
              class="slide"
              style="background-image: url('/img/pkl/pdfvalidasi-astra.png')"
            ></div>
          </div>
          <div class="dots" data-carousel="carousel-6"></div>
        </aside>
      </div>
    </main>

    <footer>
      © 2025 Reyna Aydhina Maritza — ASTRA Project (PKL Datasoft Solusi
      Indonesia)
    </footer>

    <script src="/js/script.js"></script>
  </body>
</html>
